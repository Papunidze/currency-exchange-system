@use 'styles/variables' as *;
@use 'styles/mixins' as *;

$form-max-width: 600px;
$form-transition: var(--transition-fast);

.form {
  width: 100%;
  max-width: $form-max-width;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl);
  padding: var(--spacing-xl);
  background-color: var(--background-light);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-xl);
  border: 1px solid var(--border-primary);
  font-family: var(--font-family-base);
  transition: all $form-transition;

  h1 {
    font-family: var(--font-family-heading);
    font-size: var(--font-size-xxl);
    font-weight: var(--font-weight-bold);
    color: var(--text-color-primary);
    margin: 0;
    padding-bottom: var(--spacing-md);
    border-bottom: 1px solid var(--border-primary);

    @include respond(sm) {
      font-size: var(--font-size-xl);
      padding-bottom: var(--spacing-sm);
    }
  }



  @include respond(sm) {
    padding: var(--spacing-lg);
    gap: var(--spacing-lg);
  }
}

.fields {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);

  @include respond(sm) {
    gap: var(--spacing-md);
  }
}

.field {
  width: 100%;
  transition: all $form-transition;
  position: relative;

  &.grid {
    @include grid(2, var(--spacing-lg));

    @include respond(sm) {
      grid-template-columns: 1fr;
    }
  }
}

.actions {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: var(--spacing-md);

  @include respond(sm) {
    flex-direction: column;
    gap: var(--spacing-sm);

    > * {
      width: 100%;
    }
  }

  .secondary {
    order: -1;
    color: var(--text-color-secondary);

    @media (min-width: 641px) {
      order: 0;
    }

    &:hover {
      color: var(--text-color-primary);
    }
  }
}

.loading {
  opacity: 0.7;
  pointer-events: none;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255, 255, 255, 0.5);
    @include blur-bg(4px);
  }
}

.error {
  border-color: var(--variant-danger);
  background-color: rgba(var(--variant-danger), 0.05);
  animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

.success {
  border-color: var(--variant-success);
  background-color: rgba(var(--variant-success), 0.05);
  animation: slideUp 0.3s ease-out forwards;
}

@keyframes shake {
  10%,
  90% {
    transform: translateX(-1px);
  }
  20%,
  80% {
    transform: translateX(2px);
  }
  30%,
  50%,
  70% {
    transform: translateX(-4px);
  }
  40%,
  60% {
    transform: translateX(4px);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(4px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.fieldGroup {
  padding: var(--spacing-lg);
  background-color: rgba(var(--background-primary), 0.03);
  border-radius: var(--radius-md);
  border: 1px solid var(--border-primary);
  margin: var(--spacing-md) 0;

  > .fields {
    gap: var(--spacing-md);
  }

  &:focus-within {
    border-color: var(--variant-primary);
    background-color: rgba(var(--variant-primary), 0.02);
  }
}

.helperText {
  font-size: var(--font-size-sm);
  color: var(--text-color-secondary);
  margin-top: var(--spacing-xs);
  transition: all $form-transition;

  .error & {
    color: var(--variant-danger);
  }

  .success & {
    color: var(--variant-success);
  }
}
